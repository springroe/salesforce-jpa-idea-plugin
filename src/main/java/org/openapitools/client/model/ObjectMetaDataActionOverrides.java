/*
 * salesforce api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ObjectMetaDataActionOverrides
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-03-01T18:23:34.688259300+08:00[Asia/Shanghai]")
public class ObjectMetaDataActionOverrides {
  public static final String SERIALIZED_NAME_FORM_FACTOR = "formFactor";
  @SerializedName(SERIALIZED_NAME_FORM_FACTOR)
  private String formFactor;

  public static final String SERIALIZED_NAME_IS_AVAILABLE_IN_TOUCH = "isAvailableInTouch";
  @SerializedName(SERIALIZED_NAME_IS_AVAILABLE_IN_TOUCH)
  private Boolean isAvailableInTouch;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PAGE_ID = "pageId";
  @SerializedName(SERIALIZED_NAME_PAGE_ID)
  private String pageId;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;


  public ObjectMetaDataActionOverrides formFactor(String formFactor) {
    
    this.formFactor = formFactor;
    return this;
  }

   /**
   * Get formFactor
   * @return formFactor
  **/
  @ApiModelProperty(required = true, value = "")

  public String getFormFactor() {
    return formFactor;
  }


  public void setFormFactor(String formFactor) {
    this.formFactor = formFactor;
  }


  public ObjectMetaDataActionOverrides isAvailableInTouch(Boolean isAvailableInTouch) {
    
    this.isAvailableInTouch = isAvailableInTouch;
    return this;
  }

   /**
   * Get isAvailableInTouch
   * @return isAvailableInTouch
  **/
  @ApiModelProperty(required = true, value = "")

  public Boolean getIsAvailableInTouch() {
    return isAvailableInTouch;
  }


  public void setIsAvailableInTouch(Boolean isAvailableInTouch) {
    this.isAvailableInTouch = isAvailableInTouch;
  }


  public ObjectMetaDataActionOverrides name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ObjectMetaDataActionOverrides pageId(String pageId) {
    
    this.pageId = pageId;
    return this;
  }

   /**
   * Get pageId
   * @return pageId
  **/
  @ApiModelProperty(required = true, value = "")

  public String getPageId() {
    return pageId;
  }


  public void setPageId(String pageId) {
    this.pageId = pageId;
  }


  public ObjectMetaDataActionOverrides url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(required = true, value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectMetaDataActionOverrides objectMetaDataActionOverrides = (ObjectMetaDataActionOverrides) o;
    return Objects.equals(this.formFactor, objectMetaDataActionOverrides.formFactor) &&
        Objects.equals(this.isAvailableInTouch, objectMetaDataActionOverrides.isAvailableInTouch) &&
        Objects.equals(this.name, objectMetaDataActionOverrides.name) &&
        Objects.equals(this.pageId, objectMetaDataActionOverrides.pageId) &&
        Objects.equals(this.url, objectMetaDataActionOverrides.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(formFactor, isAvailableInTouch, name, pageId, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectMetaDataActionOverrides {\n");
    sb.append("    formFactor: ").append(toIndentedString(formFactor)).append("\n");
    sb.append("    isAvailableInTouch: ").append(toIndentedString(isAvailableInTouch)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pageId: ").append(toIndentedString(pageId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

